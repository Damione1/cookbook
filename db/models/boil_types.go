// Code generated by SQLBoiler 4.15.0 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package models

import (
	"strconv"

	"github.com/friendsofgo/errors"
	"github.com/volatiletech/sqlboiler/v4/boil"
	"github.com/volatiletech/strmangle"
)

// M type is for providing columns and column values to UpdateAll.
type M map[string]interface{}

// ErrSyncFail occurs during insert when the record could not be retrieved in
// order to populate default value information. This usually happens when LastInsertId
// fails or there was a primary key configuration that was not resolvable.
var ErrSyncFail = errors.New("models: failed to synchronize data after insert")

type insertCache struct {
	query        string
	retQuery     string
	valueMapping []uint64
	retMapping   []uint64
}

type updateCache struct {
	query        string
	valueMapping []uint64
}

func makeCacheKey(cols boil.Columns, nzDefaults []string) string {
	buf := strmangle.GetBuffer()

	buf.WriteString(strconv.Itoa(cols.Kind))
	for _, w := range cols.Cols {
		buf.WriteString(w)
	}

	if len(nzDefaults) != 0 {
		buf.WriteByte('.')
	}
	for _, nz := range nzDefaults {
		buf.WriteString(nz)
	}

	str := buf.String()
	strmangle.PutBuffer(buf)
	return str
}

type IngredientUnitEnum string

// Enum values for IngredientUnitEnum
const (
	IngredientUnitEnumUNIT_UNSPECIFIED IngredientUnitEnum = "UNIT_UNSPECIFIED"
	IngredientUnitEnumMILLIGRAM        IngredientUnitEnum = "MILLIGRAM"
	IngredientUnitEnumGRAM             IngredientUnitEnum = "GRAM"
	IngredientUnitEnumKILOGRAM         IngredientUnitEnum = "KILOGRAM"
	IngredientUnitEnumMILLILITER       IngredientUnitEnum = "MILLILITER"
	IngredientUnitEnumCENTILITER       IngredientUnitEnum = "CENTILITER"
	IngredientUnitEnumLITER            IngredientUnitEnum = "LITER"
	IngredientUnitEnumTEASPOON         IngredientUnitEnum = "TEASPOON"
	IngredientUnitEnumTABLESPOON       IngredientUnitEnum = "TABLESPOON"
	IngredientUnitEnumCUP              IngredientUnitEnum = "CUP"
	IngredientUnitEnumPINCH            IngredientUnitEnum = "PINCH"
	IngredientUnitEnumUNIT             IngredientUnitEnum = "UNIT"
	IngredientUnitEnumPACKAGE          IngredientUnitEnum = "PACKAGE"
	IngredientUnitEnumCAN              IngredientUnitEnum = "CAN"
	IngredientUnitEnumBOTTLE           IngredientUnitEnum = "BOTTLE"
	IngredientUnitEnumJAR              IngredientUnitEnum = "JAR"
	IngredientUnitEnumBAG              IngredientUnitEnum = "BAG"
	IngredientUnitEnumBOX              IngredientUnitEnum = "BOX"
	IngredientUnitEnumBUNCH            IngredientUnitEnum = "BUNCH"
	IngredientUnitEnumHEAD             IngredientUnitEnum = "HEAD"
	IngredientUnitEnumCLOVE            IngredientUnitEnum = "CLOVE"
	IngredientUnitEnumLEAF             IngredientUnitEnum = "LEAF"
	IngredientUnitEnumHANDFUL          IngredientUnitEnum = "HANDFUL"
)

func AllIngredientUnitEnum() []IngredientUnitEnum {
	return []IngredientUnitEnum{
		IngredientUnitEnumUNIT_UNSPECIFIED,
		IngredientUnitEnumMILLIGRAM,
		IngredientUnitEnumGRAM,
		IngredientUnitEnumKILOGRAM,
		IngredientUnitEnumMILLILITER,
		IngredientUnitEnumCENTILITER,
		IngredientUnitEnumLITER,
		IngredientUnitEnumTEASPOON,
		IngredientUnitEnumTABLESPOON,
		IngredientUnitEnumCUP,
		IngredientUnitEnumPINCH,
		IngredientUnitEnumUNIT,
		IngredientUnitEnumPACKAGE,
		IngredientUnitEnumCAN,
		IngredientUnitEnumBOTTLE,
		IngredientUnitEnumJAR,
		IngredientUnitEnumBAG,
		IngredientUnitEnumBOX,
		IngredientUnitEnumBUNCH,
		IngredientUnitEnumHEAD,
		IngredientUnitEnumCLOVE,
		IngredientUnitEnumLEAF,
		IngredientUnitEnumHANDFUL,
	}
}

func (e IngredientUnitEnum) IsValid() error {
	switch e {
	case IngredientUnitEnumUNIT_UNSPECIFIED, IngredientUnitEnumMILLIGRAM, IngredientUnitEnumGRAM, IngredientUnitEnumKILOGRAM, IngredientUnitEnumMILLILITER, IngredientUnitEnumCENTILITER, IngredientUnitEnumLITER, IngredientUnitEnumTEASPOON, IngredientUnitEnumTABLESPOON, IngredientUnitEnumCUP, IngredientUnitEnumPINCH, IngredientUnitEnumUNIT, IngredientUnitEnumPACKAGE, IngredientUnitEnumCAN, IngredientUnitEnumBOTTLE, IngredientUnitEnumJAR, IngredientUnitEnumBAG, IngredientUnitEnumBOX, IngredientUnitEnumBUNCH, IngredientUnitEnumHEAD, IngredientUnitEnumCLOVE, IngredientUnitEnumLEAF, IngredientUnitEnumHANDFUL:
		return nil
	default:
		return errors.New("enum is not valid")
	}
}

func (e IngredientUnitEnum) String() string {
	return string(e)
}
